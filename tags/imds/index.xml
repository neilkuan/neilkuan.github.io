<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IMDS on Neil Blog</title>
    <link>https://blog.neilkuan.net/tags/imds/</link>
    <description>Recent content in IMDS on Neil Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Mon, 10 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.neilkuan.net/tags/imds/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Why aws-sdk-js-v2 get sts assume-role token so slow in k8s node</title>
      <link>https://blog.neilkuan.net/posts/2022-08-17-why-aws-sdk-js-v2-get-sts-assume-role-token-so-slow-in-k8s-node/</link>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.neilkuan.net/posts/2022-08-17-why-aws-sdk-js-v2-get-sts-assume-role-token-so-slow-in-k8s-node/</guid>
      <description>前言： 工作上遇到的問題，花點時間解決，並解記錄下來。
為什麼我的 node application 在 k8s 內部執行時，執行以下 function 時如此的慢，我在地端測試都沒有這個問題？？ 開門見山直接看有問題的 code.
aws-sdk-js version: 2.1026.0 const sts = new AWS.STS({ endpoint: &amp;#39;https://sts.us-east-1.amazonaws.com &amp;#39;, region: &amp;#39;us-east-1&amp;#39;, stsRegionalEndpoints: &amp;#39;regional&amp;#39;, }); const credentials = await sts .assumeRole({ RoleArn: roleArn, RoleSessionName: &amp;#39;RoleSessionName&amp;#39;, }) .promise(); 可以看到光是執行 assumeRole() 就花費了 4.668s 的時間！！
經過另一個方式用測試，採用直接塞 AKSK(ACCESS-KEY)(SECRET-ACCESS-KEY)的方式去執行 assumeRole() 以下為示意code:
const awsSdk = require(&amp;#39;aws-sdk&amp;#39;); const stsClient = new awsSdk.STS({ endpoint: &amp;#39;https://sts.us-east-1.amazonaws.com/ &amp;#39;, region: &amp;#39;us-east-1&amp;#39;, stsRegionalEndpoints: &amp;#34;regional&amp;#34;, accessKeyId: &amp;#39;ACCESS-KEY&amp;#39;, // &amp;lt;- AK secretAccessKey: &amp;#39;SECRET-ACCESS-KEY&amp;#39; &amp;lt;-SK }); const credentials = stsClient.</description>
    </item>
    
  </channel>
</rss>
